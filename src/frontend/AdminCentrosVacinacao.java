/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frontend;

import backend.CentroVacinacao;
import backend.ListaCentVac;
import backend.Serializacao;
import backend.Sistema;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sanda
 */
public class AdminCentrosVacinacao extends javax.swing.JFrame {
    private Sistema sistema;
    private DefaultTableModel modeloTabela;
    private Serializacao bd;
    
    public AdminCentrosVacinacao(Sistema sistema, Serializacao bd) {
        initComponents();
        this.sistema = sistema;
        this.bd=bd;
        modeloTabela = (DefaultTableModel) tabelaCentros.getModel();
        this.setLocationRelativeTo(null);
        preencheTabela();
    }    
    
    private void preencheTabela() {
    modeloTabela.setRowCount(0); //especifica o nr de linhas na tabela
    for (int index = 0; index < sistema.getListaCentros().getListaCentros().size(); index++) {
    CentroVacinacao c = sistema.getListaCentros().getListaCentros().get(index);
    modeloTabela.addRow(new Object[]{c.getCodigo(), c.getMorada(), c.getLocalidade(), c.getNumPostos()});
    }
     tabelaCentros.setModel(modeloTabela);
    }


    /**
     * Creates new form CentrosVacinacao
     */
        public void atualizar() {    
            //Informa o modelo que foram efetuadas alteracoes, o modelo informa a tabela e os dados são redesenhados
         modeloTabela.fireTableDataChanged();
        } 
        
        private void guardarAlteracoes() {
         bd.gravaSistema(sistema);
     }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabelaCentros = new javax.swing.JTable();
        Criar = new javax.swing.JButton();
        Apagar = new javax.swing.JButton();
        centro = new javax.swing.JLabel();
        associarGestor = new javax.swing.JButton();
        info = new javax.swing.JButton();
        efeitos = new javax.swing.JButton();
        alocar = new javax.swing.JButton();
        voltar = new javax.swing.JButton();
        guardar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        txtMorada = new javax.swing.JTextField();
        txtLocalidade = new javax.swing.JTextField();
        txtNumPostos = new javax.swing.JTextField();
        botaoEditar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(45, 62, 80));
        jPanel1.setMaximumSize(new java.awt.Dimension(798, 353));
        jPanel1.setMinimumSize(new java.awt.Dimension(798, 353));
        jPanel1.setPreferredSize(new java.awt.Dimension(798, 353));

        tabelaCentros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Codigo", "Morada", "Localidade", "NumPostos"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tabelaCentros);

        Criar.setText("Criar");
        Criar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CriarActionPerformed(evt);
            }
        });

        Apagar.setText("Apagar");
        Apagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ApagarActionPerformed(evt);
            }
        });

        centro.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        centro.setForeground(new java.awt.Color(240, 240, 240));
        centro.setText("CENTROS VACINAÇÃO");

        associarGestor.setText("Associar Gestor");
        associarGestor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                associarGestorActionPerformed(evt);
            }
        });

        info.setText("Informações");
        info.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                infoActionPerformed(evt);
            }
        });

        efeitos.setText("Efeitos Secundários");
        efeitos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                efeitosActionPerformed(evt);
            }
        });

        alocar.setText("Alocar Stock");
        alocar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alocarActionPerformed(evt);
            }
        });

        voltar.setText("Voltar");
        voltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voltarActionPerformed(evt);
            }
        });

        guardar.setText("Guardar");
        guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(224, 60, 50));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        jLabel1.setForeground(new java.awt.Color(240, 240, 240));
        jLabel1.setText("Codigo:");

        jLabel2.setForeground(new java.awt.Color(240, 240, 240));
        jLabel2.setText("Morada:");

        jLabel3.setForeground(new java.awt.Color(240, 240, 240));
        jLabel3.setText("Localidade:");

        jLabel5.setForeground(new java.awt.Color(240, 240, 240));
        jLabel5.setText("NumPostos:");

        botaoEditar.setText("Editar");
        botaoEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoEditarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(75, 75, 75)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(guardar, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                                            .addComponent(botaoEditar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(Apagar, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                                            .addComponent(Criar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 62, Short.MAX_VALUE)
                                                .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addComponent(jLabel5))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtNumPostos)
                                            .addComponent(txtCodigo)
                                            .addComponent(txtMorada)
                                            .addComponent(txtLocalidade))))
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(voltar)
                                .addGap(71, 71, 71)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(info)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(efeitos, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(alocar, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(associarGestor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 529, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(centro)
                        .addGap(185, 185, 185))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtMorada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtLocalidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtNumPostos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Apagar)
                            .addComponent(botaoEditar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Criar)
                            .addComponent(guardar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(voltar))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(centro)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(info)
                            .addComponent(efeitos)
                            .addComponent(alocar)
                            .addComponent(associarGestor))))
                .addGap(36, 36, 36))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 868, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarActionPerformed
        txtCodigo.setText(null);
        txtMorada.setText(null);
        txtLocalidade.setText(null);
        txtNumPostos.setText(null);

        guardarAlteracoes();
        JOptionPane.showMessageDialog(this, "Alterações guardadas com sucesso!");

        preencheTabela();
    }//GEN-LAST:event_guardarActionPerformed

    private void voltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voltarActionPerformed
        // TODO add your handling code here:
        dispose();
       /* Principal p = new Principal(sistema, bd);
        p.setVisible(true);*/
    }//GEN-LAST:event_voltarActionPerformed

    private void alocarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alocarActionPerformed
        // TODO add your handling code here:
        if (tabelaCentros.getSelectedRow() != -1) {
            int column = 0;
            int row = tabelaCentros.getSelectedRow();
            String value = tabelaCentros.getModel().getValueAt(row, column).toString();
            CentroVacinacao centro;
            try {
                centro = sistema.getListaCentros().getCentroVacinacao(value);
                AdminAlocarStock a=new AdminAlocarStock(sistema, bd,centro);
                a.setVisible(true);
            } catch (ListaCentVac.CentroNaoExistenteException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
            }
        }else{
            //JOptionPane.showMessageDialog(null, ex.getMessage(), "Selecione um centro!", JOptionPane.ERROR_MESSAGE);
            JOptionPane.showMessageDialog(this, "Selecione um centro!");
        }
        //AdminAlocarStock alocar=new AdminAlocarStock(sistema,bd,centro);
        //alocar.setVisible(true);
    }//GEN-LAST:event_alocarActionPerformed

    private void efeitosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_efeitosActionPerformed
        if (tabelaCentros.getSelectedRow() != -1) {
            int column = 0;
            int row = tabelaCentros.getSelectedRow();
            String value = tabelaCentros.getModel().getValueAt(row, column).toString();
            CentroVacinacao centro;
            try {
                centro = sistema.getListaCentros().getCentroVacinacao(value);
                AdminEfeitosSec ae=new AdminEfeitosSec(sistema, bd,centro);
                ae.setVisible(true);
            } catch (ListaCentVac.CentroNaoExistenteException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(this, "Selecione um centro!");
        }
    }//GEN-LAST:event_efeitosActionPerformed

    private void infoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_infoActionPerformed
        if (tabelaCentros.getSelectedRow() != -1) {
            int column = 0;
            int row = tabelaCentros.getSelectedRow();
            String value = tabelaCentros.getModel().getValueAt(row, column).toString();
            CentroVacinacao centro;
            try {
                centro = sistema.getListaCentros().getCentroVacinacao(value);
                AdminInfoCentros ai=new AdminInfoCentros(sistema, bd,centro);
                ai.setVisible(true);
            } catch (ListaCentVac.CentroNaoExistenteException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(this, "Selecione um centro!");
        }
    }//GEN-LAST:event_infoActionPerformed

    private void associarGestorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_associarGestorActionPerformed
        if (tabelaCentros.getSelectedRow() != -1) {
            int column = 0;
            int row = tabelaCentros.getSelectedRow();
            String value = tabelaCentros.getModel().getValueAt(row, column).toString();
            CentroVacinacao centro;
            try {
                centro = sistema.getListaCentros().getCentroVacinacao(value);
                if (centro.getGestor()==null){
                    AdminAssociarGestor a=new AdminAssociarGestor(sistema, bd,centro);
                    a.setVisible(true);
                }else{
                    JOptionPane.showMessageDialog(this, "Centro já tem gestor atribuido!");
                }
            } catch (ListaCentVac.CentroNaoExistenteException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(this, "Selecione um centro!");
        }
    }//GEN-LAST:event_associarGestorActionPerformed

    private void ApagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ApagarActionPerformed
        if (tabelaCentros.getSelectedRow() != -1) {
            int column = 0;
            int row = tabelaCentros.getSelectedRow();
            String value = tabelaCentros.getModel().getValueAt(row, column).toString();
            CentroVacinacao ctr;
            try {
                ctr = sistema.getListaCentros().getCentroVacinacao(value);
                sistema.getListaCentros().removerCentro(ctr);
            } catch (ListaCentVac.CentroNaoExistenteException ex) {
                JOptionPane.showMessageDialog(rootPane, ex);
            }
            modeloTabela.removeRow(tabelaCentros.getSelectedRow());
        }else{
            JOptionPane.showMessageDialog(this, "Selecione um centro!");
        }
    }//GEN-LAST:event_ApagarActionPerformed

    private void CriarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CriarActionPerformed
        if (txtCodigo.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Introduza o codigo do centro!");
            txtCodigo.requestFocus();
            return;
        }

        if (txtMorada.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Introduza o codigo do centro!");
            txtMorada.requestFocus();
            return;
        }

        if (txtLocalidade.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Introduza a localidade do centro!");
            txtLocalidade.requestFocus();
            return;
        }

        if (txtNumPostos.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Introduza o codigo do centro!");
            txtNumPostos.requestFocus();
            return;
        }

        String cod= txtCodigo.getText();
        String mor =txtMorada.getText();
        String local =txtLocalidade.getText();
        int n_postos =(Integer.parseInt(txtNumPostos.getText()));

        try {
            sistema.getListaCentros().adicionarCentro(new CentroVacinacao(cod, mor, local, n_postos));
        } catch (ListaCentVac.CentroDuplicadoException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
        preencheTabela();
    }//GEN-LAST:event_CriarActionPerformed

    private void botaoEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoEditarActionPerformed
        if (txtCodigo.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Introduza o código do centro que quer editar!");
            txtCodigo.requestFocus();
            return;
        }
        if (txtMorada.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Introduza a morada do centro que quer editar!");
            txtMorada.requestFocus();
            return;
        }
        if (txtLocalidade.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Introduza a localidade do centro que quer editar!");
            txtLocalidade.requestFocus();
            return;
        }
        if (txtNumPostos.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Introduza o número de postos do centro que quer editar!");
            txtNumPostos.requestFocus();
            return;
        }

        if (sistema.getListaCentros().existe(txtCodigo.getText())){
            CentroVacinacao c;
            try {
                c = (CentroVacinacao) sistema.getListaCentros().getCentroVacinacao(txtCodigo.getText());
                c.setCodigo(txtCodigo.getText());
                c.setMorada(txtMorada.getText());
                c.setLocalidade(txtLocalidade.getText());
                c.setNumPostos(Integer.parseInt(txtNumPostos.getText()));
            } catch (ListaCentVac.CentroNaoExistenteException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
            }
            preencheTabela();

        }else{
            JOptionPane.showMessageDialog(this, "Esse centro não existe!");
        }
    }//GEN-LAST:event_botaoEditarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminCentrosVacinacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminCentrosVacinacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminCentrosVacinacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminCentrosVacinacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new CentrosVacinacao().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Apagar;
    private javax.swing.JButton Criar;
    private javax.swing.JButton alocar;
    private javax.swing.JButton associarGestor;
    private javax.swing.JButton botaoEditar;
    private javax.swing.JLabel centro;
    private javax.swing.JButton efeitos;
    private javax.swing.JButton guardar;
    private javax.swing.JButton info;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tabelaCentros;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtLocalidade;
    private javax.swing.JTextField txtMorada;
    private javax.swing.JTextField txtNumPostos;
    private javax.swing.JButton voltar;
    // End of variables declaration//GEN-END:variables
}
